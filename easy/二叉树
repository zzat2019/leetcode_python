首先，我们来讲讲什么是树：
树是一种非线性的数据结构，相对于线性的数据结构(链表、数组)而言，树的平均运行时间更短(往往与树相关的排序时间复杂度都不会高)
二叉树的意思就是说：每个节点不能多于有两个儿子，上面的图就是一颗二叉树。
一棵树至少会有一个节点(根节点)
树由节点组成，每个节点的数据结构是这样的：
因此，我们定义树的时候往往是**->定义节点->节点连接起来就成了树**，而节点的定义就是：一个数据、两个指针(如果有节点就指向节点、没有节点就指向null)
二叉树遍历的三种方式：
先序遍历
先访问根节点，然后访问左节点，最后访问右节点(根->左->右)
中序遍历
先访问左节点，然后访问根节点，最后访问右节点(左->根->右)
后序遍历
先访问左节点，然后访问右节点，最后访问根节点(左->右->根)
上面我们是手动创建二叉树的，一般地：都是给出一个数组给你，让你将数组变成一个二叉树，此时就需要我们动态创建二叉树了。

二叉树中还有一种特殊的二叉树：二叉查找树(binary search tree)

定义：当前根节点的左边全部比根节点小，当前根节点的右边全部比根节点大。
明眼人可以看出，这对我们来找一个数是非常方便快捷的
往往我们动态创建二叉树都是创建二叉查找树
